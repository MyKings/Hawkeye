{"version":3,"file":"js/79.291c4423.js","mappings":"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","sources":["webpack://Hawkeye/./src/views/setting/Github.vue","webpack://Hawkeye/src/views/setting/Github.vue","webpack://Hawkeye/./src/views/setting/Github.vue?181a","webpack://Hawkeye/./src/views/setting/Github.vue?5a7b"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"input-new-account\"},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.formInline}},[_c('el-form-item',{attrs:{\"label\":\"账号\"}},[_c('el-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"账号\"},model:{value:(_vm.formInline.username),callback:function ($$v) {_vm.$set(_vm.formInline, \"username\", $$v)},expression:\"formInline.username\"}})],1),_c('el-form-item',{attrs:{\"label\":\"密码\"}},[_c('el-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"密码\"},model:{value:(_vm.formInline.password),callback:function ($$v) {_vm.$set(_vm.formInline, \"password\", $$v)},expression:\"formInline.password\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.addGithubAccount}},[_vm._v(\"添加 \")])],1)],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"stripe\":\"\",\"tooltip-effect\":\"dark\",\"data\":_vm.accounts}},[_c('el-table-column',{attrs:{\"prop\":\"username\",\"label\":\"账号\"}}),_c('el-table-column',{attrs:{\"prop\":\"mask_password\",\"label\":\"密码\"}}),_c('el-table-column',{attrs:{\"prop\":\"rate_limit\",\"label\":\"配额剩余\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":'剩余'+scope.row.rate_remaining,\"placement\":\"top\"}},[_c('el-progress',{attrs:{\"percentage\":parseInt(scope.row.rate_remaining/scope.row.rate_limit*100)}})],1)]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"fixed\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"round\":\"\"},on:{\"click\":function($event){return _vm.deleteGithubAccount(scope.row)}}},[_vm._v(\"删除 \")])]}}])})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"input-new-account\">\n        <el-form :inline=\"true\" :model=\"formInline\">\n            <el-form-item label=\"账号\">\n                <el-input size=\"mini\" v-model=\"formInline.username\" placeholder=\"账号\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"密码\">\n                <el-input size=\"mini\"\n                          v-model=\"formInline.password\" placeholder=\"密码\"></el-input>\n            </el-form-item>\n            <el-form-item>\n                <el-button size=\"mini\"\n                           type=\"primary\" @click=\"addGithubAccount\">添加\n                </el-button>\n            </el-form-item>\n        </el-form>\n        <el-table\n                stripe\n                tooltip-effect=\"dark\"\n                :data=\"accounts\"\n                style=\"width: 100%\"\n        >\n            <el-table-column\n                    prop=\"username\"\n                    label=\"账号\"\n            >\n            </el-table-column>\n            <el-table-column\n                    prop=\"mask_password\"\n                    label=\"密码\"\n            >\n            </el-table-column>\n            <el-table-column\n                    prop=\"rate_limit\"\n                    label=\"配额剩余\"\n            >\n                <template slot-scope=\"scope\">\n                    <el-tooltip effect=\"dark\" :content=\"'剩余'+scope.row.rate_remaining\" placement=\"top\">\n                        <el-progress :percentage=\"parseInt(scope.row.rate_remaining/scope.row.rate_limit*100)\"></el-progress>\n                    </el-tooltip>\n                </template>\n            </el-table-column>\n            <el-table-column\n                    label=\"操作\"\n                    fixed=\"right\"\n            >\n                <template slot-scope=\"scope\">\n                    <el-button size=\"mini\" type=\"danger\" round @click=\"deleteGithubAccount(scope.row)\">删除\n                    </el-button>\n\n                </template>\n            </el-table-column>\n        </el-table>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"Github\",\n        data() {\n            return {\n                accounts: [],\n                formInline: {}\n            };\n        },\n        methods: {\n            addGithubAccount() {\n                if (\n                    this.formInline.hasOwnProperty(\"password\") ||\n                    this.formInline.hasOwnProperty(\"username\")\n                ) {\n                    this.axios\n                        .post(this.api.settingGithub, this.formInline)\n                        .then(response => {\n                            if (response.data.status === 201) {\n                                this.$message.success(response.data.msg);\n                                this.accounts = response.data.result;\n                            } else {\n                                this.$message.error(response.data.msg);\n                            }\n                        })\n                        .catch(error => {\n                            this.$message.error(error.toString());\n                        });\n                } else {\n                    this.$message.error(\"请输入用户名密码\");\n                }\n            },\n            deleteGithubAccount(item) {\n                this.axios\n                    .delete(this.api.settingGithub, {\n                        params: {\n                            username: item.username\n                        }\n                    })\n                    .then(response => {\n                        this.$message.success(response.data.msg);\n                        this.accounts = response.data.result;\n                    })\n                    .catch(error => {\n                        this.$message.error(error.toString());\n                    });\n            },\n            fetchGithubAccount() {\n                this.axios\n                    .get(this.api.settingGithub)\n                    .then(response => {\n                        this.accounts = response.data.result;\n                    })\n                    .catch(error => {\n                        this.$message.error(error.toString());\n                    });\n            }\n        },\n        created() {\n            this.fetchGithubAccount();\n        }\n    };\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Github.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Github.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Github.vue?vue&type=template&id=6f0bff7c&\"\nimport script from \"./Github.vue?vue&type=script&lang=js&\"\nexport * from \"./Github.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","formInline","model","value","username","callback","$$v","$set","expression","password","on","addGithubAccount","_v","staticStyle","accounts","scopedSlots","_u","key","fn","scope","row","rate_remaining","parseInt","rate_limit","$event","deleteGithubAccount","staticRenderFns","name","data","methods","hasOwnProperty","axios","post","api","settingGithub","then","response","status","$message","success","msg","result","error","catch","toString","item","delete","params","fetchGithubAccount","get","created","component"],"sourceRoot":""}